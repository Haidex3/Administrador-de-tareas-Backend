# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# 2.3. Run tests with Maven
name: Deploy Java App to Azure Web App

on:
  pull_request:
    branches:
      - master  # Cambia esta rama según tus necesidades

env:
  AZURE_WEBAPP_NAME: 'taskManager'  # Nombre de tu App Service en Azure
  AZURE_WEBAPP_PACKAGE_PATH: 'target/*.jar'  # Ruta del archivo JAR después del build
  JAVA_VERSION: '21'  # Versión de Java que estás utilizando

jobs:
  # 1. Job: Build (compilar el proyecto)
  build:
    runs-on: ubuntu-latest

    steps:
      # 1.1. Checkout your code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      # 1.2. Set up Java
      - name: 'Set up JDK ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'  # O 'zulu' si prefieres

      # 1.3. Build the project using Maven
      - name: 'Build with Maven'
        run: mvn clean package
      # Guarda el archivo .jar como artefacto
      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar  # El archivo JAR resultante

  # 2. Job: Test (correr pruebas)
  test:
    runs-on: ubuntu-latest

    needs: build  # Este job depende de que el build sea exitoso

    steps:
      # 2.1. Checkout your code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      # 2.2. Set up Java
      - name: 'Set up JDK ${{ env.JAVA_VERSION }}'
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      # 2.3. Run tests with Maven
      - name: 'Run tests with Maven'
        run: mvn test
      # 2.4. Upload test results
      - name: 'Upload test results'
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports/  # Directorio de resultados de pruebas

  # 3. Job: Deploy (desplegar la aplicación)
  deploy:
    runs-on: ubuntu-latest

    needs: test  # Este job depende de que los tests sean exitosos

    steps:
      # 3.1. Checkout your code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      # 3.2. Descargar el artefacto del build (archivo JAR)
      - name: 'Download build artifact'
        uses: actions/download-artifact@v3
        with:
          name: app-jar

      # 3.3. Deploy the JAR file to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}  # Nombre de tu App Service
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Configura el secret en GitHub
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}  # Ruta del archivo JAR generado